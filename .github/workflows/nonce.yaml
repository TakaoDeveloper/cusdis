name: Nonce

on:
  workflow_dispatch:
  repository_dispatch:
    types: [call-takao.eu.org]

jobs:
  receive-repository-dispatch:
    name: Nonce include
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 
          token: ${{ secrets.GH_PAT }}
      - name: safe dirctory
        run: git config --global --add safe.directory $(pwd)
      - name: Receive
        run: |
          script_nonce=${{ github.event.client_payload.script_nonce }}
          style_nonce=${{ github.event.client_payload.style_nonce }}
          echo -e "window.CUSDIS = {}\n\nconst makeIframeContent = (target) => {\n  const host = target.dataset.host || 'https://cusdis.com'\n  const iframeJsPath = target.dataset.iframe || \`\${host}/js/iframe.umd.js\`\n  const cssPath = \`\${host}/js/style.css\`\n  return \`<!DOCTYPE html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" href=\"\${cssPath}\">\n    <base target=\"_parent\" />\n    <link>\n    <script nonce=\"${script_nonce}\">\n      window.CUSDIS_LOCALE = \${JSON.stringify(window.CUSDIS_LOCALE)}\n      window.__DATA__ = \${JSON.stringify(target.dataset)}\n    </script>\n    <style>\n      :root {\n        color-scheme: light;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script nonce=\"${script_nonce}\" src=\"\${iframeJsPath}\" type=\"module\">\n\n    </script>\n  </body>\n</html>\`\n}\n\nlet singleTonIframe\nfunction createIframe(target) {\n  if (!singleTonIframe) {\n    singleTonIframe = document.createElement('iframe')\n    listenEvent(singleTonIframe, target)\n  }\n  // srcdoc dosen't work on IE11\n  singleTonIframe.srcdoc = makeIframeContent(target)\n  singleTonIframe.style.width = '100%'\n  singleTonIframe.style.border = '0'\n\n  return singleTonIframe\n}\n\nfunction postMessage(event, data) {\n  if (singleTonIframe) {\n    singleTonIframe.contentWindow.postMessage(\n      JSON.stringify({\n        from: 'cusdis',\n        event,\n        data,\n      }),\n    )\n  }\n}\n\nfunction listenEvent(iframe, target) {\n  const darkModeQuery = window.matchMedia('(prefers-color-scheme: dark)')\n\n  const onMessage = (e) => {\n    try {\n      const msg = JSON.parse(e.data)\n      if (msg.from === 'cusdis') {\n        switch (msg.event) {\n          case 'onload':\n            {\n              if (target.dataset.theme === 'auto') {\n                postMessage(\n                  'setTheme',\n                  darkModeQuery.matches ? 'dark' : 'light',\n                )\n              }\n            }\n            break\n          case 'resize':\n            {\n              iframe.style.height = msg.data + 'px'\n            }\n            break\n        }\n      }\n    } catch (e) {}\n  }\n\n  window.addEventListener('message', onMessage)\n\n  function onChangeColorScheme(e) {\n    const isDarkMode = e.matches\n    if (target.dataset.theme === 'auto') {\n      postMessage('setTheme', isDarkMode ? 'dark' : 'light')\n    }\n  }\n\n  darkModeQuery.addEventListener('change', onChangeColorScheme)\n\n  return () => {\n    darkModeQuery.removeEventListener('change', onChangeColorScheme)\n    window.removeEventListener('message', onMessage)\n  }\n}\n\nfunction render(target) {\n  if (target) {\n    target.innerHTML = ''\n    const iframe = createIframe(target)\n    target.appendChild(iframe)\n  }\n}\n\n// deprecated\nwindow.renderCusdis = render\n\nwindow.CUSDIS.renderTo = render\n\nwindow.CUSDIS.setTheme = function (theme) {\n  postMessage('setTheme', theme)\n}\n\nfunction initial() {\n  let target\n\n  if (window.cusdisElementId) {\n    target = document.querySelector(\`#\${window.cusdisElementId}\`)\n  } else if (document.querySelector('#cusdis_thread')) {\n    target = document.querySelector('#cusdis_thread')\n  } else if (document.querySelector('#cusdis')) {\n    console.warn(\n      'id \`cusdis\` isdeprecated. Please use \`cusdis_thread\` instead',\n    )\n    target = document.querySelector('#cusdis')\n  }\n\n  if (window.CUSDIS_PREVENT_INITIAL_RENDER === true) {\n  } else {\n    if (target) {\n      render(target)\n    }\n  }\n}\n\n// initialize\nwindow.CUSDIS.initial = initial\n\ninitial()" \
            > /home/runner/work/cusdis/cusdis/widget/index.js
      - name: push generated nonce
        run: |
          git config user.name auto-push
          git config user.email auto-push@example.com
          git add .
          git commit -m "auto push from ci" || echo no commits
          git push
